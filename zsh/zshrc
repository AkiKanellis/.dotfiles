#!/bin/zsh

fpath=($DOTFILES/zsh/plugins $fpath)

# +------------+
# | NAVIGATION |
# +------------+

setopt AUTO_CD              # Go to folder path without using cd.

setopt AUTO_PUSHD           # Push the old directory onto the stack on cd.
setopt PUSHD_IGNORE_DUPS    # Do not store duplicates in the stack.
setopt PUSHD_SILENT         # Do not print the directory stack after pushd or popd.

setopt CORRECT              # Spelling correction
setopt CDABLE_VARS          # Change directory to a path stored in a variable.
setopt EXTENDED_GLOB        # Use extended globbing syntax.

autoload -Uz bd; bd

# +---------+
# | HISTORY |
# +---------+

setopt EXTENDED_HISTORY          # Write the history file in the ':start:elapsed;command' format.
setopt SHARE_HISTORY             # Share history between all sessions.
setopt HIST_EXPIRE_DUPS_FIRST    # Expire a duplicate event first when trimming history.
setopt HIST_IGNORE_DUPS          # Do not record an event that was just recorded again.
setopt HIST_IGNORE_ALL_DUPS      # Delete an old recorded event if a new event is a duplicate.
setopt HIST_FIND_NO_DUPS         # Do not display a previously found event.
setopt HIST_IGNORE_SPACE         # Do not record an event starting with a space.
setopt HIST_SAVE_NO_DUPS         # Do not write a duplicate event to the history file.
setopt HIST_VERIFY               # Do not execute immediately upon history expansion.

# +--------+
# | COLORS |
# +--------+

# Override colors
eval "$(dircolors -b $ZDOTDIR/dircolors)"

# +---------+
# | ALIASES |
# +---------+

source $DOTFILES/aliases/aliases

# +---------+
# | SCRIPTS |
# +---------+

source $DOTFILES/zsh/scripts.zsh # Scripts

# +--------------------+
# | TIME NOTIFICATIONS |
# +--------------------+

source $DOTFILES/zsh/plugins/notifyosd.zsh # Send notification when command line done

# +--------+
# | PROMPT |
# +--------+

fpath=($DOTFILES/zsh/prompt $fpath)
autoload -Uz prompt_purification_setup; prompt_purification_setup

# +-----------+
# | PROFILING |
# +-----------+

zmodload zsh/zprof

# +-----+
# | VIM |
# +-----+

# Vi mode
bindkey -v
export KEYTIMEOUT=1

# Change cursor
autoload -Uz cursor_mode; cursor_mode

# edit current command line with vim (vim-mode, then v)
autoload -Uz edit-command-line
zle -N edit-command-line
bindkey -M vicmd v edit-command-line

source $DOTFILES/zsh/plugins/vim-mode
# +------------+
# | COMPLETION |
# +------------+

source $DOTFILES/zsh/completion.zsh
autoload $DOTFILES/zsh/plugins/kubectl-completion/zsh-kubectl-completion

# +-----+
# | Git |
# +-----+

# Add command gitit to open Github repo in default browser from a local repo
autoload -U gitit

# +-----+
# | FZF |
# +-----+

if [ $(command -v "fzf") ]; then
    source /usr/share/fzf/completion.zsh
    source /usr/share/fzf/key-bindings.zsh
    source $DOTFILES/zsh/scripts_fzf.zsh # fzf Scripts

    # Search with fzf and open selected file with Vim
    # bindkey -s '^v' 'vim $(fzf);^M'
fi

# Startup
if [[ "$(tty)" = "/dev/tty1" ]];
then
    pgrep i3 || exec ssh-agent startx "$XDG_CONFIG_HOME/X11/xinitrc"
fi

# Display all possible tmuxp session when opening terminal
ftmuxp

# +------------+
# | KEYSTROKES |
# +------------+

# ctrl+l used for tmux (switch pane)
bindkey -r '^l'

bindkey -r '^g'
bindkey -r '^p'
bindkey -r '^w'

bindkey -s '^g' ' clear\n'
bindkey -s '^p' 'fmux\n'
bindkey -s '^w' 'fwork\n'

# +------+
# | Node |
# +------+

source /usr/share/nvm/init-nvm.sh

# +---------------------+
# | SYNTAX HIGHLIGHTING |
# +---------------------+

source $DOTFILES/zsh/plugins/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh

