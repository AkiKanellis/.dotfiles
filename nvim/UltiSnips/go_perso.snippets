# functions test
snippet /^test/ "Main function" r
func Test${1:Func}(t *testing.T) {
	${0:${VISUAL}}
}
endsnippet

snippet tt "table-driven tests"
func Test${1:Func}(t *testing.T) {
	testCases := []struct {
		name string
		${2:} ${3:} 
		result ${4:} 
	}{
		{
			name: "${5:Happy case}",
		},
	}

	for _, tc := range testCases {
		t.Run(tc.name, func(t *testing.T) {
			if tc.{4} != tc.${3} {
				t.Errorf("Expected %s, actual %s", tc.${4}, tc.${3})
			}
		})
	}
}
endsnippet

snippet err "Basic error handling" b
if err != nil {
	${1}
}
endsnippet

snippet errw "Basic error handling with wrapping" b
if err != nil {
	error.wrapf(err, "${1}")
}
endsnippet

snippet errw "Gin gonic abort with error" b
if err != nil {
	error.wrapf(err, "${1}")
}
endsnippet

snippet cabort "Basic abort with error from Gin Context" b
c.AbortWithError(http.StatusInternalServerError, ${1})
return
endsnippet

