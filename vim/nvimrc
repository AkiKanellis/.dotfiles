" Note: Skip initialization for vim-tiny or vim-small.
if !1 | finish | endif

if &compatible
    set nocompatible
endif

"-----------------
" install plugin  
"-----------------

" install plugin automatically
" autocmd VimEnter * PlugInstall .

call plug#begin('~/nvim/plugged')

" nerdtree - file explorer
Plug 'scrooloose/nerdtree', { 'on': ['NERDTreeToggle', 'NERDTreeFind'] } | Plug 'Xuyuanp/nerdtree-git-plugin' | Plug 'ryanoasis/vim-devicons' " file drawer
Plug 'itchyny/lightline.vim'

call plug#end()

"------------------
" general binding 
"------------------

let mapleader = "\<Space>"

nmap <leader>n :NERDTreeToggle<CR>

" prevent for using arrow keys
inoremap  <Up>     <esc>ggVGd:call NoArrowInput()<cr>
inoremap  <Down>   <esc>ggVGd:call NoArrowInput()<cr>
inoremap  <Left>   <esc>ggVGd:call NoArrowInput()<cr>
inoremap  <Right>  <esc>ggVGd:call NoArrowInput()<cr>
noremap   <Up>     <esc>ggVGd:call NoArrowInput()<cr>
noremap   <Down>   <esc>ggVGd:call NoArrowInput()<cr>
noremap   <Left>   <esc>ggVGd:call NoArrowInput()<cr>
noremap   <Right>  <esc>ggVGd:call NoArrowInput()<cr>

function! NoArrowInput()
        let l:input = ''
        echo "type no arrows to return to vim"
        while l:input !~ 'no arrows'
                let l:input = input("")
        endwhile
        u
endfunction

" edit vimrc with f5 and source it automatically
nmap <silent> <leader><f5> :e $MYVIMRC<CR>
augroup reload_vimrc
    autocmd!
    autocmd BufWritePost $MYVIMRC nested source $MYVIMRC
augroup END

"-----------------
" general config 
"-----------------

" set the directory where the swap file will be saved
set backupdir=~/.vim/backup//
set directory=~/.vim/swap//
set undodir=~/.vim/undo//

" set line number
set number

syntax on
set autoindent
" toggle paste mode for passing from clipboard
set pastetoggle=<F11>

" the copy goes to the clipboard
set clipboard+=unnamedplus

"----------------
" general theme 
"----------------

"let g:lightline = {
"      \ 'colorscheme': 'seoul256',
"      \ }
